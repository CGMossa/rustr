# DO NOT CHANGE the "init" and "install" sections below

cache:
  - C:\RLibrary

# Download script file from GitHub
init:
  ps: |
        $ErrorActionPreference = "Stop"
        Invoke-WebRequest http://raw.github.com/krlmlr/r-appveyor/master/scripts/appveyor-tool.ps1 -OutFile "..\appveyor-tool.ps1"
        Import-Module '..\appveyor-tool.ps1'

install:
  - ps: Bootstrap
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-nightly-i686-pc-windows-gnu.exe"
  - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-nightly-x86_64-pc-windows-gnu.exe"
  - if %R_ARCH%==i386 ( rust-nightly-x86_64-pc-windows-gnu.exe /VERYSILENT /NORESTART /DIR="C:\Rust32" ) else ( rust-nightly-i686-pc-windows-gnu.exe /VERYSILENT /NORESTART /DIR="C:\Rust32" )
  - if %R_ARCH%==i386 ( md C:\Rust\lib\rustlib\x86_64-pc-windows-gnu ) else ( md C:\Rust\lib\rustlib\i686-pc-windows-gnu )
  - if %R_ARCH%==i386 ( xcopy C:\Rust32\lib\rustlib\x86_64-pc-windows-gnu C:\Rust\lib\rustlib\x86_64-pc-windows-gnu /s /e /h ) else ( xcopy C:\Rust32\lib\rustlib\i686-pc-windows-gnu C:\Rust\lib\rustlib\i686-pc-windows-gnu /s /e /h  )
  - if %R_ARCH%==i386 ( rust-nightly-x86_64-pc-windows-gnu.exe /VERYSILENT /NORESTART /DIR="C:\Rust32" ) else ( rust-nightly-i686-pc-windows-gnu.exe /VERYSILENT /NORESTART /DIR="C:\Rust32" )
  - if %R_ARCH%==i386 ( rust-nightly-i686-pc-windows-gnu.exe /VERYSILENT /NORESTART /DIR="C:\Rust" ) else ( rust-nightly-x86_64-pc-windows-gnu.exe /VERYSILENT /NORESTART /DIR="C:\Rust" )
  - SET PATH=%PATH%;C:\Rust\bin;C:\R\bin\%R_ARCH%
  - del rust-nightly-i686-pc-windows-gnu.exe
  - del rust-nightly-x86_64-pc-windows-gnu.exe
  - SET RLIBPATH=C:\R\bin\%R_ARCH%
  - SET RUST_TEST_THREADS=1
  - SET R_HOME=C:\R\
# Adapt as necessary starting from here

environment:
  matrix:

  - R_VERSION: stable
    R_ARCH: i386
    GCC_PATH: mingw_32
    channel: nightly

  - R_VERSION: stable
    R_ARCH: x64
    GCC_PATH: mingw_64
    channel: nightly

build_script:
  - cp ../travis-tool.sh travis-tool.sh
  - travis-tool.sh.cmd install_github rustr/rustinr

test_script:
  # - cargo build --features "date engine random logging"
  # - cargo test --verbose --features "date engine random logging"
  - cd rtest
  - ../travis-tool.sh.cmd install_deps
  - ../travis-tool.sh.cmd run_tests
  - cd ..
  - cargo test --features "engine"

on_failure:
  - cd rtest
  - ../travis-tool.sh.cmd dump_logs
  - 7z a failure.zip *.Rcheck\*
  - appveyor PushArtifact failure.zip
